//
//  ImageViewController.swift
//  imageVIP
//
//  Created by Manan Vij on 16/08/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ImageDisplayLogic: class
{
    func displayAPI(viewModel: Image.ImageAPI.ViewModel)
}

class ImageViewController: UIViewController, ImageDisplayLogic
{
    
    @IBOutlet weak var imageView: UIImageView!
    
    var interactor: ImageBusinessLogic?
    var router: (NSObjectProtocol & ImageRoutingLogic & ImageDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ImageInteractor()
        let presenter = ImagePresenter()
        let router = ImageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    @IBAction func btnPressed(_ sender: UIButton) {
        doAPI()
    }
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doAPI()
    }
    
    // MARK: Do API
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doAPI()
    {
        // Make API Call
        let request = Image.ImageAPI.Request()
        interactor?.doAPI(request: request)
    }
    
    func displayAPI(viewModel: Image.ImageAPI.ViewModel)
    {
        let imageUrlArray = viewModel.url
        let randomIndex = Int.random(in: 0..<imageUrlArray.count)
        DispatchQueue.global().async { [weak self] in
            let url = URL(string: imageUrlArray[randomIndex].raw)
            if let data = try? Data(contentsOf: url!) {
                if let image = UIImage(data: data) {
                    DispatchQueue.main.async {
                        self?.imageView.image = image
                    }
                }
            }
        }
    }
    
}
